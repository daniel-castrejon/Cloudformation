Outputs:
  IdInstancia:
    Description: id de la instancia a crear
    Value:
      Ref: WebServer
Description: >
  Este stack va a crear 
  una instancia y todo lo
  que necesita
Conditions:
  StagingEnvironment: !Equals
    - !Ref Enviroment
    - staging
  ProdEnvironment: !Equals
    - !Ref Enviroment
    - prod
Parameters:
  VpcIdParameter:
    Type: String
  KeyPairParameter:
    Type: String
  AmiIdParameter:
    Type: String  
  Enviroment:
    Type: String
    AllowedValues:
      - prod
      - staging
Resources:
  WebServer:
    Type: 'AWS::EC2::Instance'
    Properties: 
      ImageId: 
        Ref: AmiIdParameter
      InstanceType: t2.micro
      KeyName: 
        Ref: KeyPairParameter
      SecurityGroupIds: 
        - Ref: SecurityGroupSSH

  SecurityGroupSSH:
    Type: 'AWS::EC2::SecurityGroup'
    Properties: 
      GroupDescription: "Security group que permite el acceso ssh"
      VpcId: 
        Ref: VpcIdParameter
      SecurityGroupEgress: 
        - CidrIp: "0.0.0.0/0"
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      SecurityGroupIngress: 
        - CidrIp: "187.189.33.33/32"
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
  SecurityGroupIngressStaging:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: StagingEnvironment
    Properties:
      CidrIp: "187.189.33.33/32"
      Description: Access from internal networks
      FromPort: 22
      IpProtocol: tcp
      ToPort: 22
      GroupId: !Ref SecurityGroupSSH
  SecurityGroupIngressProd:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: ProdEnvironment
    Properties:
      CidrIp: "0.0.0.0/0"
      Description: Access from everywhere networks
      FromPort: 22
      IpProtocol: tcp
      ToPort: 22
      GroupId: !Ref SecurityGroupSSH